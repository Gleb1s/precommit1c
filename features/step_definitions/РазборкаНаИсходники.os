// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

#Использовать asserts

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ВРабочемКаталогеСодержатсяИсходникиОбработкиВФормате");
	ВсеШаги.Добавить("ВПодпапкеРабочегоКаталогаСодержатсяИсходникиОбработкиВФормате");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры


//в подпапке "src/1" рабочего каталога содержатся исходники обработки "Fixture" в формате "v8reader"
Процедура ВПодпапкеРабочегоКаталогаСодержатсяИсходникиОбработкиВФормате(Знач Подпапка, Знач ИмяОбработки, Знач Формат) Экспорт
	Если Формат = "v8reader" Тогда
		ИмяКаталогаИсходниковОбработки = ОбъединитьПути(Подпапка, ИмяОбработки);
		ПроверяемИсходникиВРабочемКаталоге(ИмяКаталогаИсходниковОбработки, ОписаниеИсходниковФорматаV8reader());
	ИначеЕсли Формат = "designer" Тогда
		ИмяКаталогаИсходниковОбработки = ОбъединитьПути(Подпапка, ИмяОбработки);
		ПроверяемИсходникиВРабочемКаталоге(ИмяКаталогаИсходниковОбработки, ОписаниеИсходниковФорматаКонфигуратора(ИмяОбработки));
	Иначе
		ВызватьИсключение "Проверяем несуществующий формат!";
	КонецЕсли;
КонецПроцедуры

//в рабочем каталоге содержатся исходники обработки "Fixture" в формате "v8reader"
Процедура ВРабочемКаталогеСодержатсяИсходникиОбработкиВФормате(Знач ИмяОбработки, Знач Формат) Экспорт
	Если Формат = "v8reader" Тогда
		ПроверяемИсходникиВРабочемКаталоге(ИмяОбработки, ОписаниеИсходниковФорматаV8reader());
	ИначеЕсли Формат = "designer" Тогда
		ПроверяемИсходникиВРабочемКаталоге(ИмяОбработки, ОписаниеИсходниковФорматаКонфигуратора(ИмяОбработки));
	Иначе
		ВызватьИсключение "Проверяем несуществующий формат!";
	КонецЕсли;
КонецПроцедуры

//{ Служебные методы

Функция РабочийКаталог()
	Возврат БДД.ПолучитьИзКонтекста("РабочийКаталог");
КонецФункции

Функция КаталогПроекта()
	Возврат БДД.ПолучитьИзКонтекста("КаталогПроекта");
КонецФункции

Процедура ПроверяемИсходникиВРабочемКаталоге(ИмяОбработки, ОписаниеИсходников)
	ПроверяемСуществованиеФайлаВРабочемКаталоге(ИмяОбработки, Ложь);
	Для каждого КлючИЗначение из ОписаниеИсходников Цикл
		ПроверяемСуществованиеФайлаВРабочемКаталоге(ОбъединитьПути(ИмяОбработки, КлючИЗначение.Ключ), КлючИЗначение.Значение);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверяемСуществованиеФайлаВРабочемКаталоге(ПутьКФайлу, ЭтоФайл)
	Файл = Новый Файл(ОбъединитьПути(РабочийКаталог(), ПутьКФайлу));
	Ожидаем.Что(Файл.Существует(), ПутьКФайлу + " должен существовать, а это не так!").ЭтоИстина();
	СтрокаОшибки = СтрШаблон("%1: значение Файл.ЭтоФайл() должно %2, а это не так!", ПутьКФайлу, ЭтоФайл);
	Ожидаем.Что(Файл.ЭтоФайл() = ЭтоФайл, СтрокаОшибки).ЭтоИстина();
КонецПроцедуры

Функция ОписаниеИсходниковФорматаV8reader()
	Описание = Новый Соответствие;
	Описание.Вставить("renames.txt", Истина);
	Описание.Вставить("Form", Ложь);
	Описание.Вставить("Макеты", Ложь);
	Описание.Вставить("und", Ложь);
	Возврат Описание;
КонецФункции

Функция ОписаниеИсходниковФорматаКонфигуратора(ИмяОбработки)
	Описание = Новый Соответствие;
	Описание.Вставить(ИмяОбработки + ".xml", Истина);
	Описание.Вставить(ИмяОбработки, Ложь);
	Описание.Вставить(ОбъединитьПути(ИмяОбработки, "Forms"), Ложь);
	Описание.Вставить(ОбъединитьПути(ИмяОбработки, "Templates"), Ложь);
	Возврат Описание;
КонецФункции

//}
